{"course_id": "18409", "course_description": ["This course will cover a collection of geometric techniques that apply broadly in modern algorithm design. The exact topics covered will depend on student interest, but a (perhaps overly ambitious) set of possibilities includes:", "Spectral Graph Theory", "Graph Laplacians and their eigenvalues, connections to random walks and mixing, isoperimetric and Cheeger inequalities, expanders, and random graphs. Applications to include graph cutting, clustering, approximate counting, disjoint path problems, routing, and graph drawing.", "Convex Geometry", "Geometric properties of high-dimensional convex bodies, Fritz John's theorem and isotropy, Brunn-Minkowski and isoperimetric inequalities, concentration of measure and connections to probability theory. Applications to include volume computation and convex programming.", "Multiplicative Weights", "The multiplicative weights update method, its geometric meaning, and the many ways that it appears in modern computer science, with a focus on its use in optimization. Applications to include fast approximation algorithms for graph problems, \"boosting\" in learning and complexity theory, online algorithms, and zero-sum games.", "Iterative Methods for Linear Algebra", "How to use geometric information to quickly solve linear systems and eigenvalue problems. Will cover basic iterative methods, the Lanczos algorithm, conjugate gradients, preconditioning, and how spectral graph theory can be used to improve the construction of preconditioners.", "Lattices and Basis Reduction", "Basic properties of lattices, Minkowski's theorem, and the LLL algorithm. Applications to include solving low-dimensional integer programs and breaking cryptosystems.", "LP- and SDP-based Approximation Algorithms for NP-Hard Problems", "Linear and semidefinite programming relaxations of NP-hard problems, rounding techniques, and primal-dual methods.", " To learn a collection of powerful (and interrelated) mathematical techniques for algorithm design      Topics picked to be both mathematically interesting and practically useful Will sometimes have long mathematical interludes, but always with proportional algorithmic payoffs  To be able to apply these tools directly to your research      Whether your work is theoretical or applied I'll suggest open research questions whenever possible  "], "course_name": "Topics in Theoretical Computer Science: An Algorithmist's Toolkit", "course_prerequisites": ["This is a graduate-level class and will move fairly quickly. We shall assume a significant level of mathematical maturity. The formal prerequisites are fairly minimal however; they consist of:", " Multivariable Calculus (18.02) Linear Algebra (18.06) Basic Algorithms, and Basic Probability ", "Some experience with algorithms beyond the introductory level will be helpful, but it is not strictly necessary."]}